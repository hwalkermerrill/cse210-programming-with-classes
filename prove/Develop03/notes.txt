// Written by Harrison Merrill, CSE210 2025.23.5

// Functional Requirements:
1. Store a scripture, including both the reference (for example "John 3:16") and the
text of the scripture.
2. Accommodate scriptures with multiple verses, such as "Proverbs 3:5-6".
3. Clear the console screen and display the complete scripture, including the reference
and the text.
4. Prompt the user to press the enter key or type quit.
5. If the user types quit, the program should end.
6. If the user presses the enter key (without typing quit), the program should hide a few
random words in the scripture, clear the console screen, and display the scripture again.
7. The program should continue prompting the user and hiding more words until all words
in the scripture are hidden.
8. When all words in the scripture are hidden, the program should end.
9. When selecting the random words to hide, for the core requirements, you can select any
word at random, even if the word was already hidden.
(As a stretch challenge, try to randomly select from only those words that are not already
hidden.)

// Design Requirements
1. Use the principles of Encapsulation, including proper use of classes, methods,
public/private access modifiers, and follow good style throughout.
2. Contain at least 3 classes in addition to the Program class: one for the scripture
itself, one for the reference (for example "John 3:16"), and to represent a word
in the scripture.
3. Provide multiple constructors for the scripture reference to handle the case of a
single verse and a verse range ("Proverbs 3:5" or "Proverbs 3:5-6").

// Design Plan

Classes:
  main
    -> maybe contains a menu
    - contains quit function
    - contains reference, which contains each scripture and word
    -> construct reference, possibly from a text file or list
    - as program progresses, randomly selects one more word to hide itself
    - Attributes:
      -- function: exit
      -- string: reference
      -- constructor: build reference from list
  reference
    - Called by main
    - Is the reference for the scripture
    - Calls constructor for multiple verses when necessary
    - Attributes:
      -- string: reference
      -- string: scripture(s)
      -- constructor: build scripture from reference
  scripture
    - called by reference
    - Contains each word
    - Attributes:
      -- string: scripture
      -- string: word(s)
      -- constructor: build words from scripture
  word
    - called by scripture
    - is each word individually
    - responsible for showing its own shown/hidden state
    - Attributes:
      -- string: word
      -- bool: visible

Functions:
  possible function to randomly select scripture from list or file
  function to hide random word
  constructor for multiple verses
  possible constructor to read file and generate words with reference
  quit function
